/*! HTML5 Boilerplate v5.0.0 | MIT License | http://h5bp.com/ */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */
/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
  color: #222;
  font-size: 1em;
  line-height: 1.4; }

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio, canvas, iframe, img, svg, video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/*
 * Catch-all for preventing accidental overflow of these elements
 */
img, object, embed, video {
  max-width: 100%; }

/**
 * Min-width and min-height for tap-targets
 */
nav, a, button {
  min-width: 48px;
  min-height: 48px; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
/* ---------------------- Theme colors ---------------------- */
/* ----------------------- Font colors and sizes ---------------------- */
/* White text on dark backgrounds */
/* Dark text on light backgrounds */
/**
 * Use with every animation and transition so we can have a
 * global animation speed toggler (i.e., for visual UI testing)
 */
/*
 * Easing functions
 */
[class^="page-section_"] {
  width: 100%;
  display: block;
  position: relative; }

/**
 * Attribute API for declarative flexbox styling
 */
[layout] {
  width: 100%;
  display: -webkit-flex;
  display: flex; }

[layout="horizontal"], [layout="row"] {
  -webkit-flex-direction: row;
          flex-direction: row; }

[layout="vertical"], [layout="column"] {
  -webkit-flex-direction: column;
          flex-direction: column; }

[layout-align="space-around"] {
  -webkit-justify-content: space-around;
          justify-content: space-around; }

[layout-align="space-between"] {
  -webkit-justify-content: space-between;
          justify-content: space-between; }

[layout-align="center"] {
  -webkit-justify-content: center;
          justify-content: center; }

[layout-align="start"] {
  -webkit-justify-content: flex-start;
          justify-content: flex-start; }

[layout-align="end"] {
  -webkit-justify-content: flex-end;
          justify-content: flex-end; }

html, body {
  width: 100%;
  min-height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  font-size: 16px;
  background-color: whitesmoke; }

.main-view-container {
  position: relative;
  width: 100vw;
  height: 100%;
  margin: 0;
  padding: 0; }

.content-wrapper {
  padding: .3em .8em; }

.container {
  margin: 0 auto;
  text-align: center;
  overflow: hidden;
  background-color: white; }
  .container.content {
    margin: 1em auto;
    width: 80%; }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers:
 * http://juicystudio.com/article/screen-readers-display-none.php
 */
.hidden {
  display: none !important;
  visibility: hidden; }

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before, .clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */
/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *, *:before, *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
                                          http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important; }
  a, a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after, a[href^="javascript:"]:after {
    content: ""; }
  pre, blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group; }
  tr, img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p, h2, h3 {
    orphans: 3;
    widows: 3; }
  h2, h3 {
    page-break-after: avoid; } }

.about {
  text-align: left; }

.content-header {
  text-align: center; }

.accentuated {
  color: #ff9100;
  font-size: 2.5em; }

.profile-links {
  text-align: center; }
  .profile-links li {
    list-style-type: none; }


/*# sourceMappingURL=data:application/json;base64, */