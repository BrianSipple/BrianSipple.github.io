/*! HTML5 Boilerplate v5.0.0 | MIT License | http://h5bp.com/ */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */
/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
  color: #222;
  font-size: 1em;
  line-height: 1.4; }

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio, canvas, iframe, img, svg, video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/*
 * Catch-all for preventing accidental overflow of these elements
 */
img, object, embed, video {
  max-width: 100%; }

/**
 * Min-width and min-height for tap-targets
 */
nav, a, button {
  min-width: 48px;
  min-height: 48px; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
/* ---------------------- Theme colors ---------------------- */
/* ----------------------- Fonts, font colors and font sizes ---------------------- */
/* White text on dark backgrounds */
/* Dark text on light backgrounds */
/* ----------------------- Base Dimensions ---------------------- */
/* Base element styles */
/**
 * Use with every animation and transition so we can have a
 * global animation speed toggler (i.e., for visual UI testing)
 */
/*
 * Easing functions
 */
[class^="button-share"] {
  width: 3em;
  height: 3em;
  border-radius: 50%;
  border: none;
  outline: none;
  background-color: #0d6e91;
  box-shadow: 0 0.5em .25em rgba(0, 0, 0, 0.5);
  font-size: 1.25em;
  color: #531a89; }

/**
 * Syling for an anchor tag element that's wrapped inside of a button,
 * but we want to completely fill the area of the button
 */
[class^="button-share"][class$="__link"] a {
  width: 100%;
  height: 100%;
  display: inline-block; }

[class^="button-share"][class$="__link"] a {
  border-radius: 50%; }

[class^="section__page"] {
  width: 100%;
  display: block;
  position: relative; }

.section__page__main-content {
  height: auto;
  min-height: 100vh;
  padding-top: 1em; }

/**
 * Attribute API for declarative flexbox styling
 */
[layout] {
  width: 100%;
  display: -webkit-flex;
  display: flex; }

[layout="horizontal"], [layout="row"] {
  -webkit-flex-direction: row;
          flex-direction: row; }

[layout="vertical"], [layout="column"] {
  -webkit-flex-direction: column;
          flex-direction: column; }

[layout-align="space-around"] {
  -webkit-justify-content: space-around;
          justify-content: space-around; }

[layout-align="space-between"] {
  -webkit-justify-content: space-between;
          justify-content: space-between; }

[layout-align="center"] {
  -webkit-justify-content: center;
          justify-content: center; }

[layout-align="start"] {
  -webkit-justify-content: flex-start;
          justify-content: flex-start; }

[layout-align="end"] {
  -webkit-justify-content: flex-end;
          justify-content: flex-end; }

@font-face {
  font-family: "gooey-animations";
  src: url("/fonts/fontastic/gooey-animations.eot");
  src: url("/fonts/fontastic/gooey-animations.eot?#iefix") format("embedded-opentype"), url("/fonts/fontastic/gooey-animations.woff") format("woff"), url("/fonts/fontastic/gooey-animations.ttf") format("truetype"), url("/fonts/fontastic/gooey-animations.svg#gooey-animations") format("svg");
  font-weight: normal;
  font-style: normal; }

[data-icon]:before {
  font-family: "gooey-animations" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "gooey-animations" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-alert-triangle:before {
  content: "a"; }

.icon-archive:before {
  content: "c"; }

.icon-info:before {
  content: "d"; }

.icon-flag:before {
  content: "b"; }

.icon-x:before {
  content: "e"; }

.icon-trash:before {
  content: "f"; }

.icon-plus:before {
  content: "g"; }

.icon-camera:before {
  content: "h"; }

.icon-send-plane:before {
  content: "i"; }

.icon-social-twitter:before {
  content: "j"; }

.icon-social-github:before {
  content: "k"; }

.icon-social-gplus:before {
  content: "l"; }

.icon-social-linkedin:before {
  content: "m"; }

.icon-share:before {
  content: "n"; }

html, body {
  width: 100%;
  min-height: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  margin: 0;
  padding: 0;
  overflow: hidden;
  font-size: 16px;
  background-color: whitesmoke; }

.main-view-container {
  position: relative;
  width: 100vw;
  height: 100%;
  overflow-y: scroll;
  overflow-x: hidden; }

a {
  text-decoration: none; }

[class^="content-wrapper"] {
  padding: .3em .8em; }

[class^="container__"] {
  margin: 0 auto;
  text-align: center;
  overflow: hidden; }

.page-content__container {
  margin: 0 auto 1em;
  background-color: white;
  width: 80%;
  max-width: 900px;
  box-shadow: 0 0 14px rgba(0, 0, 0, 0.19);
  text-align: left; }

@media screen and (max-width: 660px) {
  .page-content__container {
    width: 100%; } }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers:
 * http://juicystudio.com/article/screen-readers-display-none.php
 */
.hidden {
  display: none !important;
  visibility: hidden; }

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before, .clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */
/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *, *:before, *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
                                          http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important; }
  a, a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after, a[href^="javascript:"]:after {
    content: ""; }
  pre, blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group; }
  tr, img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p, h2, h3 {
    orphans: 3;
    widows: 3; }
  h2, h3 {
    page-break-after: avoid; } }

.button-set-wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -1.5em;
  margin-left: -1.5em; }

.button-set-container {
  position: relative;
  height: 100%; }

[class^="button-share"] {
  width: 3em;
  height: 3em;
  background-image: none;
  background-color: #16d48b;
  /* Make them all start in the same position */
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -1.5em;
  margin-left: -1.5em;
  cursor: pointer; }
  [class^="button-share"][class$="__link"] a {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
            flex-direction: column;
    -webkit-justify-content: center;
            justify-content: center;
    text-align: center; }

.button-share__toggle {
  box-shadow: 0 0.3em 0.25em rgba(0, 0, 0, 0.19); }
  .button-share__toggle.expanded ~ .button-share__link {
    box-shadow: 0 0.3em 0.25em rgba(0, 0, 0, 0.19); }

.button-share__link {
  box-shadow: none; }

@-webkit-keyframes SlideOutUp {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }

  100% {
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0); } }

@keyframes SlideOutUp {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }

  100% {
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0); } }

.page-content__header {
  text-align: center;
  color: #16d48b; }

.page-content__header--accentuated {
  font-size: 2.5em; }

.accentuated {
  color: #16d48b; }

[class^="link-map"] {
  text-align: center;
  list-style: none;
  padding-left: 0; }

.gooey-share-container {
  text-align: center;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: flex-start;
          justify-content: flex-start;
  width: 100%;
  height: 6.2em; }

#loaderContainer {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%; }
  #loaderContainer.remove {
    -webkit-animation: SlideOutUp 88s cubic-bezier(0.215, 0.61, 0.355, 1);
            animation: SlideOutUp 88s cubic-bezier(0.215, 0.61, 0.355, 1);
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }


/*# sourceMappingURL=data:application/json;base64, */