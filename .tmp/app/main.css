/* ---------------------- Theme colors ---------------------- */
/* ----------------------- Fonts, font sizes, font colors ---------------------- */
/* White text on dark backgrounds */
/* Dark text on light backgrounds */
/* ----------------------- Base padding ---------------------- */
/* ----------------------- Base element styles ----------------------- */
/**
 * Use with every animation and transition so we can have a
 * global animation speed toggler (i.e., for visual UI testing)
 */
/*
 * Easing functions
 */
/**
 * A link styled as a button
 */
[class^="button-share"] {
  width: 3em;
  height: 3em;
  border-radius: 50%;
  border: none;
  outline: none;
  background-color: #16d48b;
  box-shadow: 0 0.5em 0.25em rgba(0, 0, 0, 0.5);
  font-size: 1.25em;
}

/**
 * Default helper styles when displaying an image via
 * the background-image property
 */
/* ----------------------------------------------------------------------------------------------------
 * Breakpoint maps -- referecened by mixins that
 * dynamically create media queries
 * ----------------------------------------------------------------------------------------------------*/
/* ----------------------------------------------------------------------------------------------------
 * Maps for use in our font-size mixin
 * Keys are the breakpoints, font-sizes (occassionally with line heights) are the corresponding values
 * ---------------------------------------------------------------------------------------------------- */
/**
 * @param $fs-map -- key-value pair with size variables or literals as keys,
 * and a value consisting of either a font-size, or a (font-size, line-height) list
 */
/* Utility function for mixin font-size */
/* ---------------------------------------------------------------------------------------------------- */
@font-face {
  font-family: "gooey-animations";
  src: url("../assets/fonts/fontastic/gooey-animations.eot");
  src: url("../assets/fonts/fontastic/gooey-animations.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/fontastic/gooey-animations.woff") format("woff"), url("../assets/fonts/fontastic/gooey-animations.ttf") format("truetype"), url("../assets/fonts/fontastic/gooey-animations.svg#gooey-animations") format("svg");
  font-weight: normal;
  font-style: normal;
}

[data-icon]:before {
  font-family: "gooey-animations" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

[class^="icon-"]:before,
[class*=" icon-"]:before {
  font-family: "gooey-animations" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-alert-triangle:before {
  content: "a";
}

.icon-archive:before {
  content: "c";
}

.icon-info:before {
  content: "d";
}

.icon-flag:before {
  content: "b";
}

.icon-x:before {
  content: "e";
}

.icon-trash:before {
  content: "f";
}

.icon-plus:before {
  content: "g";
}

.icon-camera:before {
  content: "h";
}

.icon-send-plane:before {
  content: "i";
}

.icon-social-twitter:before {
  content: "j";
}

.icon-social-github:before {
  content: "k";
}

.icon-social-gplus:before {
  content: "l";
}

.icon-social-linkedin:before {
  content: "m";
}

.icon-share:before {
  content: "n";
}

.page__section {
  width: 100%;
  display: block;
  position: relative;
}

.page__section--main-content {
  height: auto;
  min-height: 100vh;
  padding-top: 1em;
}

/**
 * Attribute API for declarative flexbox styling
 */
[layout] {
  width: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

[layout="horizontal"],
[layout="row"] {
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
}

[layout="vertical"],
[layout="column"] {
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
}

[layout-align="space-around"] {
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
}

[layout-align="space-between"] {
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

[layout-align="center"] {
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}

[layout-align="start"] {
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
}

[layout-align="end"] {
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.button-set-container {
  position: relative;
  height: 100%;
}

[class^="button-share"] {
  width: 3em;
  height: 3em;
  background-image: none;
  background-color: #16d48b;
  /* Make them all start in the same position */
  position: absolute;
  margin-left: -1.5em;
  cursor: pointer;
}

[class^="button-share"][class$="__link"] a {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: center;
}

.button-share__toggle {
  box-shadow: 0 0.3em 0.25em rgba(0, 0, 0, 0.19);
}

.button-share__toggle.expanded ~ .button-share__link {
  box-shadow: 0 0.3em 0.25em rgba(0, 0, 0, 0.19);
}

.button-share__link {
  box-shadow: none;
}

.g__theme-color-primary {
  color: #16d48b;
}

/* Animate in after load */
.js-intro-content,
.js-after-intro {
  opacity: 0;
}

/*# sourceMappingURL=data:application/json;base64, */
